Prerequisites Setup
1. Open your WSL Ubuntu terminal

2. Install Docker and Docker Compose (if not already installed):

# Update package lists
sudo apt update
 
# Install required packages
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
 
# Add Docker's official GPG key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
 
# Set up the Docker repository
echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 
# Update package database with Docker packages
sudo apt update
 
# Install Docker
sudo apt install -y docker-ce docker-ce-cli containerd.io
 
# Add your user to the Docker group to run Docker without sudo
sudo usermod -aG docker $USER
 
# Install Docker Compose
sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

3. Log out and log back in to apply the docker group changes, or run:

# Apply group changes without logging out
newgrp docker

4. Setting Up the Application
    4.1 Navigate to your downloaded files directory:
        cd /path/to/downloaded/files
    
    4.2 Make the setup script executable:
        chmod +x setup-and-run.sh

    4.3 Create necessary directories (if they don't exist):
        mkdir -p data/uploads

    4.4 Create environment file from template:
        cp .env-example .env

    4.5 Edit the environment file (optional, if you want to customize settings):
        vi .env

Recommendations:

1. Generate a strong random string for SESSION_SECRET
2. Consider setting a secure WEAVIATE_API_KEY for production
3. Use non-default credentials for PostgreSQL in production
4. All required environment variables from config.py are present
5. All service hostnames match the docker-compose configuration

The .env file is structurally valid and contains all necessary configurations for the application to run. 
However, please address the security recommendations before deploying to production.

5. Running the Application (Automated Method)
    Run the setup script:
        ./setup-and-run.sh

    Follow the interactive prompts to choose between development mode (faster, less resources) or full mode (with AI services).

    The script will automatically:
        a. Check system prerequisites
        b. Create configuration files
        c. Pull necessary Docker images
        d. Build application containers
        e. Start all services
        f. Display access URLs
    
6. Running the Application (Manual Method)
        If you prefer to run commands manually instead of using the script:

    Build the Docker images:
        docker-compose build

    For development mode (without AI services - recommended for testing):